{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1bdnjJJK04w4e-T-NzUXW08HJO-pgW5hX","authorship_tag":"ABX9TyOvi+ekKmCvJz+Gulp/VAWv"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"id":"AvOhR3bSxn1r","executionInfo":{"status":"ok","timestamp":1668589554726,"user_tz":-330,"elapsed":2140,"user":{"displayName":"Kamini Balaji","userId":"05333777554099812934"}}},"outputs":[],"source":["import pandas as pd\n","import torch as th"]},{"cell_type":"code","source":["#import and read Angstrom Dataset\n","df= pd.read_csv(\"drive/MyDrive/angstrom.csv\")\n","input= th.tensor(df.drop(columns= ['id','FTMiss','2PMiss', '2PAtt','3PMiss','3PAtt', 'ORB','DRB','TOV','PF','IsConferenceMatchup','WonCode']).values, dtype=th.float,requires_grad=True)\n","target= th.tensor(df.drop(columns= ['id','FTMade', 'FTMiss','2PMade','2PMiss', '2PAtt','3PMade','3PMiss','3PAtt', 'ORB','DRB','TOV','PF','IsConferenceMatchup', 'HasHCA', 'Points']).values, dtype=th.float, requires_grad=True)\n","\n","#Test-Train split (40-60 split)\n","test_input= input[0:105]\n","test_target= target[0:105]\n","\n","train_input= input[106:263]\n","train_target= target[106:263]\n","# print(target)"],"metadata":{"id":"ZEZYku3iyLEP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Creation of Neural Network\n","from torch import nn, optim\n","model = nn.Linear(5,3)"],"metadata":{"id":"QRmcOhok3km4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Training neural network\n","iteration = 3\n","opt = optim.SGD(params=model.parameters(), lr=0.01)\n","\n","for wi in range(iteration):\n","        opt.zero_grad()\n","        preds = model(train_input)\n","        loss = ((preds - train_target) ** 2).sum()\n","        loss.backward()\n","        opt.step()\n","        print(loss)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vx0iotCW5JwX","executionInfo":{"status":"ok","timestamp":1668090723120,"user_tz":-330,"elapsed":10,"user":{"displayName":"Kamini Balaji","userId":"05333777554099812934"}},"outputId":"81889e09-9617-497b-c37a-4fba4e222cfb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor(104028.3594, grad_fn=<SumBackward0>)\n","tensor(3.2666e+13, grad_fn=<SumBackward0>)\n","tensor(1.0372e+22, grad_fn=<SumBackward0>)\n"]}]},{"cell_type":"code","source":["#Calculation of Mean Absolute Error to check for model error\n","mae= 1.04/158\n","print(mae)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JmvrtrP154-5","executionInfo":{"status":"ok","timestamp":1668090734227,"user_tz":-330,"elapsed":6,"user":{"displayName":"Kamini Balaji","userId":"05333777554099812934"}},"outputId":"033cde1a-0535-44a8-f48b-8c805d09e07e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.006582278481012658\n"]}]},{"cell_type":"code","source":["#Testing neural network\n","\n","iteration = 1\n","opt = optim.SGD(params=model.parameters(), lr=0.01)\n","\n","for wi in range(iteration):\n","        # Test Model\n","        opt.zero_grad()\n","        test_preds = model(test_input)\n","        loss = ((test_preds - test_target) ** 2).sum()\n","        loss.backward()\n","        opt.step()\n","        print(loss)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p5FrWLCl830I","executionInfo":{"status":"ok","timestamp":1668090744179,"user_tz":-330,"elapsed":560,"user":{"displayName":"Kamini Balaji","userId":"05333777554099812934"}},"outputId":"9d0a2678-476b-4ff3-9097-e8786521358c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor(2.0949e+30, grad_fn=<SumBackward0>)\n"]}]},{"cell_type":"code","source":["#Calculation of Mean Absolute Error to check for model error\n","\n","mae= 1.04/105\n","print(mae)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T-geGF9S9N1Q","executionInfo":{"status":"ok","timestamp":1668090784650,"user_tz":-330,"elapsed":363,"user":{"displayName":"Kamini Balaji","userId":"05333777554099812934"}},"outputId":"8e28ce9b-8eb5-401b-ea95-c6f9e6f9f24b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.009904761904761906\n"]}]},{"cell_type":"code","source":["#Results:\n","#Parameters of FTMade, 2PMade, 3PMade, Points, HasHCA is able to predict Winning team with an error of 2.09 using an linear neural network model"],"metadata":{"id":"80rqAWIdDVWs"},"execution_count":null,"outputs":[]}]}